/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  getBallotDecoder,
  getBallotEncoder,
  getStakeWeightDecoder,
  getStakeWeightEncoder,
  type Ballot,
  type BallotArgs,
  type StakeWeight,
  type StakeWeightArgs,
} from '.';

export type BallotTally = {
  index: number;
  ballot: Ballot;
  stakeWeight: StakeWeight;
  tally: bigint;
  reserved: ReadonlyUint8Array;
};

export type BallotTallyArgs = {
  index: number;
  ballot: BallotArgs;
  stakeWeight: StakeWeightArgs;
  tally: number | bigint;
  reserved: ReadonlyUint8Array;
};

export function getBallotTallyEncoder(): Encoder<BallotTallyArgs> {
  return getStructEncoder([
    ['index', getU16Encoder()],
    ['ballot', getBallotEncoder()],
    ['stakeWeight', getStakeWeightEncoder()],
    ['tally', getU64Encoder()],
    ['reserved', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getBallotTallyDecoder(): Decoder<BallotTally> {
  return getStructDecoder([
    ['index', getU16Decoder()],
    ['ballot', getBallotDecoder()],
    ['stakeWeight', getStakeWeightDecoder()],
    ['tally', getU64Decoder()],
    ['reserved', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getBallotTallyCodec(): Codec<BallotTallyArgs, BallotTally> {
  return combineCodec(getBallotTallyEncoder(), getBallotTallyDecoder());
}
