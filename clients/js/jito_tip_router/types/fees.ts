/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';
import { getFeeDecoder, getFeeEncoder, type Fee, type FeeArgs } from '.';

export type Fees = {
  activationEpoch: bigint;
  reserved: Array<number>;
  baseFeeGroupsBps: Array<Fee>;
  ncnFeeGroupsBps: Array<Fee>;
};

export type FeesArgs = {
  activationEpoch: number | bigint;
  reserved: Array<number>;
  baseFeeGroupsBps: Array<FeeArgs>;
  ncnFeeGroupsBps: Array<FeeArgs>;
};

export function getFeesEncoder(): Encoder<FeesArgs> {
  return getStructEncoder([
    ['activationEpoch', getU64Encoder()],
    ['reserved', getArrayEncoder(getU8Encoder(), { size: 128 })],
    ['baseFeeGroupsBps', getArrayEncoder(getFeeEncoder(), { size: 8 })],
    ['ncnFeeGroupsBps', getArrayEncoder(getFeeEncoder(), { size: 8 })],
  ]);
}

export function getFeesDecoder(): Decoder<Fees> {
  return getStructDecoder([
    ['activationEpoch', getU64Decoder()],
    ['reserved', getArrayDecoder(getU8Decoder(), { size: 128 })],
    ['baseFeeGroupsBps', getArrayDecoder(getFeeDecoder(), { size: 8 })],
    ['ncnFeeGroupsBps', getArrayDecoder(getFeeDecoder(), { size: 8 })],
  ]);
}

export function getFeesCodec(): Codec<FeesArgs, Fees> {
  return combineCodec(getFeesEncoder(), getFeesDecoder());
}
