/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type OperatorReward = {
  operator: Address;
  reward: bigint;
  reserved: Array<number>;
};

export type OperatorRewardArgs = {
  operator: Address;
  reward: number | bigint;
  reserved: Array<number>;
};

export function getOperatorRewardEncoder(): Encoder<OperatorRewardArgs> {
  return getStructEncoder([
    ['operator', getAddressEncoder()],
    ['reward', getU64Encoder()],
    ['reserved', getArrayEncoder(getU8Encoder(), { size: 128 })],
  ]);
}

export function getOperatorRewardDecoder(): Decoder<OperatorReward> {
  return getStructDecoder([
    ['operator', getAddressDecoder()],
    ['reward', getU64Decoder()],
    ['reserved', getArrayDecoder(getU8Decoder(), { size: 128 })],
  ]);
}

export function getOperatorRewardCodec(): Codec<
  OperatorRewardArgs,
  OperatorReward
> {
  return combineCodec(getOperatorRewardEncoder(), getOperatorRewardDecoder());
}
