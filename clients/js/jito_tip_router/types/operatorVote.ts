/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type OperatorVote = {
  operator: Address;
  slotVoted: bigint;
  stakeWeight: bigint;
  ballotIndex: number;
  reserved: ReadonlyUint8Array;
};

export type OperatorVoteArgs = {
  operator: Address;
  slotVoted: number | bigint;
  stakeWeight: number | bigint;
  ballotIndex: number;
  reserved: ReadonlyUint8Array;
};

export function getOperatorVoteEncoder(): Encoder<OperatorVoteArgs> {
  return getStructEncoder([
    ['operator', getAddressEncoder()],
    ['slotVoted', getU64Encoder()],
    ['stakeWeight', getU128Encoder()],
    ['ballotIndex', getU16Encoder()],
    ['reserved', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getOperatorVoteDecoder(): Decoder<OperatorVote> {
  return getStructDecoder([
    ['operator', getAddressDecoder()],
    ['slotVoted', getU64Decoder()],
    ['stakeWeight', getU128Decoder()],
    ['ballotIndex', getU16Decoder()],
    ['reserved', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getOperatorVoteCodec(): Codec<OperatorVoteArgs, OperatorVote> {
  return combineCodec(getOperatorVoteEncoder(), getOperatorVoteDecoder());
}
