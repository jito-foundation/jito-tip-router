/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type RewardBucket = { rewards: bigint; reserved: ReadonlyUint8Array };

export type RewardBucketArgs = {
  rewards: number | bigint;
  reserved: ReadonlyUint8Array;
};

export function getRewardBucketEncoder(): Encoder<RewardBucketArgs> {
  return getStructEncoder([
    ['rewards', getU64Encoder()],
    ['reserved', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getRewardBucketDecoder(): Decoder<RewardBucket> {
  return getStructDecoder([
    ['rewards', getU64Decoder()],
    ['reserved', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getRewardBucketCodec(): Codec<RewardBucketArgs, RewardBucket> {
  return combineCodec(getRewardBucketEncoder(), getRewardBucketDecoder());
}
