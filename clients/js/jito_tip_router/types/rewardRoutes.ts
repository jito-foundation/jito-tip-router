/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type RewardRoutes = {
  destination: Address;
  rewards: bigint;
  reserved: Array<number>;
};

export type RewardRoutesArgs = {
  destination: Address;
  rewards: number | bigint;
  reserved: Array<number>;
};

export function getRewardRoutesEncoder(): Encoder<RewardRoutesArgs> {
  return getStructEncoder([
    ['destination', getAddressEncoder()],
    ['rewards', getU64Encoder()],
    ['reserved', getArrayEncoder(getU8Encoder(), { size: 128 })],
  ]);
}

export function getRewardRoutesDecoder(): Decoder<RewardRoutes> {
  return getStructDecoder([
    ['destination', getAddressDecoder()],
    ['rewards', getU64Decoder()],
    ['reserved', getArrayDecoder(getU8Decoder(), { size: 128 })],
  ]);
}

export function getRewardRoutesCodec(): Codec<RewardRoutesArgs, RewardRoutes> {
  return combineCodec(getRewardRoutesEncoder(), getRewardRoutesDecoder());
}
