/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type RewardStakeWeight = {
  rewardStakeWeight: bigint;
  reserved: ReadonlyUint8Array;
};

export type RewardStakeWeightArgs = {
  rewardStakeWeight: number | bigint;
  reserved: ReadonlyUint8Array;
};

export function getRewardStakeWeightEncoder(): Encoder<RewardStakeWeightArgs> {
  return getStructEncoder([
    ['rewardStakeWeight', getU128Encoder()],
    ['reserved', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getRewardStakeWeightDecoder(): Decoder<RewardStakeWeight> {
  return getStructDecoder([
    ['rewardStakeWeight', getU128Decoder()],
    ['reserved', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getRewardStakeWeightCodec(): Codec<
  RewardStakeWeightArgs,
  RewardStakeWeight
> {
  return combineCodec(
    getRewardStakeWeightEncoder(),
    getRewardStakeWeightDecoder()
  );
}
