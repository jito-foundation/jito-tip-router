/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/web3.js';

export type StakePoolInstruction =
  | {
      __kind: 'DepositSolWithSlippage';
      lamportsIn: bigint;
      minimumPoolTokensOut: bigint;
    }
  | { __kind: 'DepositSol'; fields: readonly [bigint] };

export type StakePoolInstructionArgs =
  | {
      __kind: 'DepositSolWithSlippage';
      lamportsIn: number | bigint;
      minimumPoolTokensOut: number | bigint;
    }
  | { __kind: 'DepositSol'; fields: readonly [number | bigint] };

export function getStakePoolInstructionEncoder(): Encoder<StakePoolInstructionArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'DepositSolWithSlippage',
      getStructEncoder([
        ['lamportsIn', getU64Encoder()],
        ['minimumPoolTokensOut', getU64Encoder()],
      ]),
    ],
    [
      'DepositSol',
      getStructEncoder([['fields', getTupleEncoder([getU64Encoder()])]]),
    ],
  ]);
}

export function getStakePoolInstructionDecoder(): Decoder<StakePoolInstruction> {
  return getDiscriminatedUnionDecoder([
    [
      'DepositSolWithSlippage',
      getStructDecoder([
        ['lamportsIn', getU64Decoder()],
        ['minimumPoolTokensOut', getU64Decoder()],
      ]),
    ],
    [
      'DepositSol',
      getStructDecoder([['fields', getTupleDecoder([getU64Decoder()])]]),
    ],
  ]);
}

export function getStakePoolInstructionCodec(): Codec<
  StakePoolInstructionArgs,
  StakePoolInstruction
> {
  return combineCodec(
    getStakePoolInstructionEncoder(),
    getStakePoolInstructionDecoder()
  );
}

// Data Enum Helpers.
export function stakePoolInstruction(
  kind: 'DepositSolWithSlippage',
  data: GetDiscriminatedUnionVariantContent<
    StakePoolInstructionArgs,
    '__kind',
    'DepositSolWithSlippage'
  >
): GetDiscriminatedUnionVariant<
  StakePoolInstructionArgs,
  '__kind',
  'DepositSolWithSlippage'
>;
export function stakePoolInstruction(
  kind: 'DepositSol',
  data: GetDiscriminatedUnionVariantContent<
    StakePoolInstructionArgs,
    '__kind',
    'DepositSol'
  >['fields']
): GetDiscriminatedUnionVariant<
  StakePoolInstructionArgs,
  '__kind',
  'DepositSol'
>;
export function stakePoolInstruction<
  K extends StakePoolInstructionArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isStakePoolInstruction<
  K extends StakePoolInstruction['__kind'],
>(
  kind: K,
  value: StakePoolInstruction
): value is StakePoolInstruction & { __kind: K } {
  return value.__kind === kind;
}
