/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';
import {
  getRewardStakeWeightDecoder,
  getRewardStakeWeightEncoder,
  type RewardStakeWeight,
  type RewardStakeWeightArgs,
} from '.';

export type StakeWeight = {
  stakeWeight: bigint;
  rewardStakeWeights: Array<RewardStakeWeight>;
};

export type StakeWeightArgs = {
  stakeWeight: number | bigint;
  rewardStakeWeights: Array<RewardStakeWeightArgs>;
};

export function getStakeWeightEncoder(): Encoder<StakeWeightArgs> {
  return getStructEncoder([
    ['stakeWeight', getU128Encoder()],
    [
      'rewardStakeWeights',
      getArrayEncoder(getRewardStakeWeightEncoder(), { size: 8 }),
    ],
  ]);
}

export function getStakeWeightDecoder(): Decoder<StakeWeight> {
  return getStructDecoder([
    ['stakeWeight', getU128Decoder()],
    [
      'rewardStakeWeights',
      getArrayDecoder(getRewardStakeWeightDecoder(), { size: 8 }),
    ],
  ]);
}

export function getStakeWeightCodec(): Codec<StakeWeightArgs, StakeWeight> {
  return combineCodec(getStakeWeightEncoder(), getStakeWeightDecoder());
}
